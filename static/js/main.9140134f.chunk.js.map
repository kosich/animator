{"version":3,"sources":["Landing/examples/wat.gif","Landing/examples/dancing.gif","Landing/examples/egg-shake.gif","Landing/examples/hearts-1.gif","Landing/examples/hearts-2.gif","Landing/examples/monkeys.gif","Landing/examples/falls.gif","core/sprites/sprites.ts","Editor/dimensions.ts","Editor/Preview/AnimationPreview.tsx","Editor/Preview/ExportGif.tsx","Editor/Preview/Frame.tsx","Editor/Preview/FramesPreview.tsx","Editor/Preview/Preview.tsx","Editor/ErrorMessage/ErrorMessage.tsx","Editor/Editor.tsx","core/index.js","Landing/examples/index.ts","Landing/Landing.tsx","App.tsx","serviceWorker.ts","index.tsx","core/parser/parser.js"],"names":["module","exports","loadSprite","sprite","state","protocol","URL","url","substr","length","emoji","Promise","res","rej","canvas","document","createElement","fontsize","scale","size","ctx","getContext","width","height","font","flipped","turned","translate","fillText","restore","loadEmojiSprite","Error","dpi_width","Math","floor","window","devicePixelRatio","dpi_height","AnimationPreview","props","React","undefined","image","setImage","frames","sub","from","pipe","concatMap","frame","merge","of","timer","duration","ignoreElements","repeat","subscribe","unsubscribe","alt","src","GIF","ExportGif","onClick","gif","workers","quality","workerScript","forEach","i","img","Image","addFrame","delay","on","blob","createObjectURL","link","href","download","body","appendChild","click","removeChild","freeWorkers","w","terminate","render","e","console","error","destroy","Frame","className","style","index","FramesPreview","map","key","Preview","useState","setFrames","useEffect","all","then","ErrorMessage","message","position","location","start","line","column","Editor","defaultScenario","scenario","setScenario","setError","change","onChange","setOnChange","subject","Subject","subscription","debounceTime","value","next","useMemo","data","objects","entry","type","values","reduce","acc","curr","objectName","x","y","Object","create","action","object","d","shift","right","left","up","down","direction","update","times","says","filter","parser","parse","err","fillStyle","fillRect","entries","drawImage","toBlob","defaultValue","target","templates","require","title","preview","LandingPage","onTemplateSelect","App","template","setTemplate","role","aria-label","rel","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","peg$SyntaxError","expected","found","this","name","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","sort","slice","join","describeExpected","describeFound","SyntaxError","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Play","peg$parsePlay","peg$startRuleFunction","peg$c2","peg$literalExpectation","peg$c5","peg$c7","peg$c9","peg$c12","peg$c13","peg$classExpectation","peg$c16","peg$c18","peg$c22","peg$c25","peg$c29","peg$c31","peg$c33","peg$c35","peg$c37","peg$c39","peg$c42","peg$c45","peg$c48","peg$c50","peg$c52","peg$c55","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c65","peg$c67","peg$c70","peg$c72","peg$otherExpectation","peg$c73","peg$c74","peg$c75","peg$c76","peg$c78","peg$c80","peg$c82","peg$c83","peg$c84","peg$c86","peg$c88","peg$c90","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$resultsCache","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","push","peg$buildStructuredError","s0","s1","s2","cached","nextPos","result","peg$parseScene","peg$parseFrame","s3","s4","peg$parse_$","peg$parsewith","s5","s7","s9","s10","s12","peg$parse_","peg$parseVar","peg$parseSprite","peg$parseObject","peg$c11","test","charAt","s6","peg$parseNumber","peg$parsewhere","peg$parseStateAction","peg$parseChangeSpriteAction","peg$parseTurnAction","peg$parseFlipAction","peg$parseMoveAction","peg$parseScaleAction","peg$parseString","peg$parseSayAction","peg$parseAction","peg$c23","peg$parseKeyValue","peg$parsevar","peg$parseBoolean","peg$c71","Number","parseFloat"],"mappings":"qMAAAA,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,0LCEpC,SAASC,EAAWC,EAAeC,GACtC,IAAMC,EAAY,IAAIC,IAAIH,GAASE,SAC7BE,EAAMJ,EAAOK,OAAOH,EAASI,QACnC,GALmB,WAKfJ,EACA,OAMR,SAAyBK,EAAeN,GACpC,OAAO,IAAIO,SAAQ,SAACC,EAAKC,GAAS,IAAD,EACvBC,EAASC,SAASC,cAAc,UAChCC,EAAW,qBAAMb,QAAN,IAAMA,OAAN,EAAMA,EAAOc,aAAb,QAAsB,GACjCC,EAAkB,IAAXF,EACPG,EAAMN,EAAOO,WAAW,MACzBD,GAKLN,EAAOQ,MAAQH,EACfL,EAAOS,OAASJ,EAChBC,EAAII,KAAOP,EAAW,aAEb,OAALb,QAAK,IAALA,OAAA,EAAAA,EAAOqB,WAAP,OAAkBrB,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOsB,YACzB,OAAItB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOsB,UACPN,EAAIF,OAAO,EAAG,GACdE,EAAIO,WAAWR,EAAM,KAGzB,OAAIf,QAAJ,IAAIA,OAAJ,EAAIA,EAAOqB,WACPL,EAAIF,MAAM,GAAI,GACdE,EAAIO,UAAU,GAAIR,KAGb,OAALf,QAAK,IAALA,OAAA,EAAAA,EAAOqB,WAAP,OAAkBrB,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOsB,UACzBN,EAAIF,OAAO,GAAI,GACfE,EAAIO,WAAWR,GAAOA,KAI9BC,EAAIQ,SAASlB,EAAO,EAAGO,GACvBG,EAAIS,UACJjB,EAAIE,IA3BAD,EAAI,0BAbDiB,CAAgBvB,EAAKH,GAGhC,MAAM,IAAI2B,MAAM,2CCTb,IAEMC,EAAYC,KAAKC,MAAL,UAFJ,IAEuBC,OAAOC,wBAA1B,QAA8C,GAC1DC,EAAaJ,KAAKC,MAAL,UAFJ,IAEwBC,OAAOC,wBAA3B,QAA+C,G,uECE5DE,EAAmB,SAACC,GAAgB,IAAD,EAClBC,gBAAeC,GADG,mBACrCC,EADqC,KAC9BC,EAD8B,KA6B5C,OA1BAH,aAAgB,WACZ,IAAMI,EAASL,EAAMK,OACrB,GAAKA,EAAOnC,OAAZ,CAKA,IAAMoC,EAAMC,YAAKF,GACZG,KACGC,aAAU,SAACC,GACP,OAAOC,YACHC,YAAGF,GACHG,YAAMH,EAAMI,UAAUN,KAAKO,mBAGnCC,eAEHC,WAAU,SAACP,GACRN,EAASM,EAAMP,UAIvB,OAAO,kBAAMG,EAAIY,eAnBbd,OAASF,KAqBd,CAACF,EAAMK,SAELF,EAIE,2BACH,uBAAKgB,IAAI,QAAQpC,MAAOU,EAAWT,OAAQc,EAAYsB,IAAKjB,KAJrD,MCjCTkB,EAAQzB,OAAD,IAOA0B,EAAY,SAACtB,GAA8B,IAC5CK,EAAWL,EAAXK,OAEFkB,EAAUtB,eAAkB,WAC9B,IAAMuB,EAAM,IAAKH,EAAY,CACzBI,QAAS,EACTC,QAAS,GACTC,aAAuC,iBACvC5C,MFjBS,IEkBTC,OFjBU,MEoBdqB,EAAOuB,SAAQ,SAAClB,EAAOmB,GACnB,IAAMC,EAAM,IAAIC,MAChBD,EAAIV,IAAMV,EAAMP,MAChBqB,EAAIQ,SAASF,EAAK,CAAEG,MAAOvB,EAAMI,cAGrCU,EAAIU,GAAG,YAAY,SAAUC,GAEzB,IAAMf,EAAMrD,IAAIqE,gBAAgBD,GAC1BE,EAAO7D,SAASC,cAAc,KACpC4D,EAAKC,KAAOlB,EACZiB,EAAKE,SAAW,cAChB/D,SAASgE,KAAKC,YAAYJ,GAC1BA,EAAKK,QACLlE,SAASgE,KAAKG,YAAYN,GAE1Bb,EAAIoB,YAAYhB,SAAQ,SAACiB,GAAD,OAAYA,EAAEC,kBAG1C,IACItB,EAAIuB,SACN,MAAOC,GACLC,QAAQC,MAAMF,GAGlB,OAAO,WACHxB,EAAI2B,aAET,CAAC9C,IAEJ,OAAO,0BAAQkB,QAASA,GAAjB,kB,OC/CJ,SAAS6B,EAAOpD,GACnB,OAAO,yBAAKqD,UAAU,QAAQC,MAAO,CAAEvE,MAAOU,EAAWT,OAAQc,IAC7D,yBAAKuD,UAAU,eAAf,IAA+BrD,EAAMuD,OACrC,yBAAKpC,IAAK,QAAUnB,EAAMuD,MAAOnC,IAAKpB,EAAMoB,IAAKrC,MAAOU,EAAWT,OAAQc,K,OCH5E,SAAS0D,EAAcxD,GAA2B,IAC7CK,EAAWL,EAAXK,OACR,OAAO,uBAAKgD,UAAU,kBAClBhD,EAAOoD,KAAI,SAAC/C,EAAO6C,GAAR,OAAkB,gBAAC,EAAD,CAAOG,IAAKhD,EAAMP,MAAOiB,IAAKV,EAAMP,MAAOoD,MAAOA,Q,WCA1EI,EAAU,SAAC3D,GAA8B,IAAD,EACrB4D,mBAAS,IADY,mBAC1CvD,EAD0C,KAClCwD,EADkC,KAajD,OAVAC,qBAAU,WAIN1F,QAAQ2F,IACJ/D,EAAMK,OAAOoD,KAAI,SAAA/C,GAAK,OAAIA,EAAMP,MAAM6D,MAAK,SAAC7D,GAAD,mBAAC,eAAqBO,GAAtB,IAA6BP,iBAE3E6D,KAAKH,KACP,CAAC7D,EAAMK,SAELA,EAAOnC,OAIL,yBAAKmF,UAAU,WAClB,kBAAC,EAAD,CAAkBhD,OAAQA,IAE1B,kBAAC,EAAD,CAAWA,OAAQA,IAEnB,kBAAC,EAAD,CAAeA,OAAQA,KARhB,M,yBClBR,SAAS4D,EAAajE,GAAa,IAAD,EAC7BkD,EAAUlD,EAAVkD,MACFgB,EAAO,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAOgB,QACjBC,EAAQ,OAAGjB,QAAH,IAAGA,GAAH,UAAGA,EAAOkB,gBAAV,aAAG,EAAiBC,MAElC,OAAO,uBAAKhB,UAAU,iBAClB,yBAAKa,GAEHC,EACA,wCAAYA,EAASG,KAArB,oBAAqCH,EAASI,SAC9C,MCDH,SAASC,EAAOxE,GAAa,IAAD,EACC4D,mBAAS5D,EAAMyE,iBADhB,mBACxBC,EADwB,KACdC,EADc,OAELf,wBAAc1D,GAFT,mBAExBgD,EAFwB,KAEjB0B,EAFiB,OAMChB,mBAAS,CAAEiB,OAAS,eANrB,mBAMxBC,EANwB,KAMdC,EANc,KAO/BjB,qBAAU,WACN,IAAMkB,EAAU,IAAIC,IAEdC,EAAeF,EAChBxE,KACG2E,YAAa,MAEhBlE,WAAU,SAACmE,GACRT,EAAYS,MAOpB,OAJAL,EAAY,CACRF,OAAQ,SAACO,GAAD,OAAgBJ,EAAQK,KAAKD,MAGlC,WACHF,EAAahE,iBAElB,CAAE6D,IAIL,IAAM1E,EAAgBiF,mBAAQ,WAC1B,IAAIjF,EAAS,GACb,IAEIA,ECnCL,SAAekF,GAClB,IAAIC,EA+FJ,OA7FeD,EAAK9B,KAAI,SAAAgC,GACpB,GAAmB,UAAfA,EAAMC,KASN,OARAF,EAAUC,EAAME,OAAOC,QAAO,SAACC,EAAKC,GAKhC,OAJAD,EAAIC,EAAKC,YAAe,CACpBnI,OAAQkI,EAAKlI,OACbC,MAAO8C,IAAM,CAAEqF,EAAG,EAAGC,EAAG,EAAGtH,MAAO,EAAGO,SAAS,EAAOC,QAAQ,GAAS2G,EAAKjI,QAExEgI,IACRK,OAAOC,OAAO,OAEV,KAGX,GAAmB,UAAfV,EAAMC,KAAkB,CAExB,IAAMhF,EAAQ,CACVI,SAAU2E,EAAM3E,UAAY,IAC5B0E,QAAS7E,IAAM,GAAI6E,IAqEvB,OAlEAC,EAAML,MAAMxD,SAAQ,SAAAwE,GAChB,GAAoB,WAAhBA,EAAOV,KACP,OAAO,KAGX,IAAMhC,EAAM0C,EAAO1C,IACb0B,EAAQgB,EAAOhB,MAErB,KAAM1B,KAAO8B,GACT,MAAM,IAAIhG,MAAJ,sBAAyBkE,IAGnC,IAAM2C,EAASb,EAAQ9B,GAEvB,GAAmB,kBAAf0B,EAAMM,KAA0B,CAChC,IAAM9H,EAASwH,EAAMxH,OACrB8C,EAAM8E,QAAQ9B,GAAK9F,OAASA,EAC5B4H,EAAQ9B,GAAK9F,OAASA,EAG1B,GAAmB,gBAAfwH,EAAMM,KAAwB,CAC9B,IAAMY,EAAIlB,EAAMA,MACVmB,EACF,CAAEC,MAAO,CAAER,EAAGM,EAAGL,EAAG,GAClBQ,KAAO,CAAET,GAAIM,EAAGL,EAAG,GACnBS,GAAO,CAAEV,EAAG,EAAGC,GAAIK,GACnBK,KAAO,CAAEX,EAAG,EAAGC,EAAGK,IAClBlB,EAAMwB,WAENC,EAASlG,IAAM,GAAI0F,EAAOxI,MAAO,CAAEmI,EAAGK,EAAOxI,MAAMmI,EAAIO,EAAMP,EAAGC,EAAGI,EAAOxI,MAAMoI,EAAIM,EAAMN,IAChGvF,EAAM8E,QAAQ9B,GAAK7F,MAAQgJ,EAC3BrB,EAAQ9B,GAAK7F,MAAQgJ,EAGzB,GAAmB,gBAAfzB,EAAMM,KAAwB,CAC9B,IAAMvG,GAAUqG,EAAQ9B,GAAK7F,MAAMsB,OAC7B0H,EAASlG,IAAM,GAAI6E,EAAQ9B,GAAK7F,MAAO,CAAEsB,WAC/CuB,EAAM8E,QAAQ9B,GAAK7F,MAAQgJ,EAC3BrB,EAAQ9B,GAAK7F,MAAQgJ,EAGzB,GAAmB,gBAAfzB,EAAMM,KAAwB,CAC9B,IAAMxG,GAAWsG,EAAQ9B,GAAK7F,MAAMqB,QAC9B2H,EAASlG,IAAM,GAAI6E,EAAQ9B,GAAK7F,MAAO,CAAEqB,YAC/CwB,EAAM8E,QAAQ9B,GAAK7F,MAAQgJ,EAC3BrB,EAAQ9B,GAAK7F,MAAQgJ,EAGzB,GAAmB,iBAAfzB,EAAMM,KAAyB,CAC/B,IAAM/G,EAAQ0H,EAAOxI,MAAMc,MAAQyG,EAAM0B,MACnCD,EAASlG,IAAM,GAAI6E,EAAQ9B,GAAK7F,MAAO,CAAEc,UAC/C+B,EAAM8E,QAAQ9B,GAAK7F,MAAQgJ,EAC3BrB,EAAQ9B,GAAK7F,MAAQgJ,EAGzB,GAAmB,iBAAfzB,EAAMM,KAAyB,CAC/B,IAAMmB,EAASlG,IAAM,GAAI6E,EAAQ9B,GAAK7F,MAAOuH,EAAMA,OACnD1E,EAAM8E,QAAQ9B,GAAK7F,MAAQgJ,EAC3BrB,EAAQ9B,GAAK7F,MAAQgJ,EAGN,eAAfzB,EAAMM,OACNhF,EAAM8E,QAAQ9B,GAAKqD,KAAO3B,EAAMA,UAIjC1E,EAGX,MAAM,IAAIlB,MAAM,oBAEnBwH,QAAO,SAAAhB,GAAC,OAAEA,KD3DMtF,CADIuG,IAAOC,MAAMxC,IAE1BE,OAAS1E,GACX,MAAOiH,GACLvC,EAASuC,GAiDb,OA9CoB9G,EAAOoD,KAAI,SAAC/C,GAC5B,IAAMnC,EAASC,SAASC,cAAc,UACtCF,EAAOQ,MPrDE,IOsDTR,EAAOS,OPrDG,IOsDV,IAAMH,EAAMN,EAAOO,WAAW,MAC9B,IAAKD,EACD,MAAM,IAAIW,MAAM,uBAGpBX,EAAIuI,UAAY,UAChBvI,EAAIwI,SAAS,EAAG,EP7DP,IACC,KO8DV,IAAMC,EAAUpB,OAAOP,OAAOjF,EAAM8E,SAC9BrF,EAAQ/B,QAAQ2F,IAClBuD,EAAQ7D,KAAI,SAACgC,GACT,OAAO9H,EAAW8H,EAAM7H,OAAQ6H,EAAM5H,OAAOmG,MAAK,SAAAlC,GAC9C,MAAO,CAAEA,MAAK2D,gBAGxBzB,MAAK,SAAAsD,GAkBH,OAjBAA,EAAQ1F,SAAQ,YAA0B,IAAvBE,EAAsB,EAAtBA,IAAK2D,EAAiB,EAAjBA,MACpB5G,EAAI0I,UAAUzF,EAAK2D,EAAM5H,MAAMmI,EAAGP,EAAM5H,MAAMoI,GAE1CR,EAAMsB,OACNlI,EAAIuI,UAAY,UAChBvI,EAAII,KAAO,aACXJ,EAAIQ,SAASoG,EAAMsB,KAAMtB,EAAM5H,MAAMmI,EAAGP,EAAM5H,MAAMoI,IAGxDpH,EAAI0I,UAAUzF,EAAK2D,EAAM5H,MAAMmI,EAAGP,EAAM5H,MAAMoI,MAIlDpH,EAAIuI,UAAY,YAChBvI,EAAII,KAAO,iBACXJ,EAAIQ,SAAS,WAAY,IAAK,KAEvB,IAAIjB,SAAQ,SAACC,EAAKC,GAErBC,EAAOiJ,QAAO,SAACrF,GAAD,OAAU9D,EAAIN,IAAIqE,gBAAgBD,aAIxD,OAAO,2BAAKzB,GAAZ,IAAmBP,eAIxB,CAACuE,IAGJ,OAAO,yBAAKrB,UAAU,UACd,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BACX,8BAAUoE,aAAc/C,EAAUI,SAAU,SAAA9B,GAAC,OAAI8B,EAASD,OAAO7B,EAAE0E,OAAOtC,YAGlF,yBAAK/B,UAAU,kBACTH,EACA,yBAAKG,UAAU,gBAAe,kBAAC,EAAD,CAAcH,MAAOA,KACnD,KAEF,kBAAC,EAAD,CAAS7C,OAASA,ME9G3B,IAAMsH,EACT,CAAE,CAAC,cAAD,4sBAAyCC,EAAQ,MACjD,CAAC,UAAD,05CAA6CA,EAAQ,MACrD,CAAC,MAAD,4bAA+CA,EAAQ,MACvD,CAAC,WAAD,+QAA8CA,EAAQ,MACtD,CAAC,WAAD,8+BAA8CA,EAAQ,MACtD,CAAC,qBAAD,yKAA6CA,EAAQ,MACrD,CAAC,MAAD,0oBAA2CA,EAAQ,OAEpDnE,KAAI,YAAiC,IAAD,mBACjC,MAAO,CAAEoE,MADwB,KACjBnD,SADiB,KACPoD,QADO,SCN5BC,G,OAAc,SAAC/H,GAAgB,IAChCgI,EAAqBhI,EAArBgI,iBACR,OAAO,uBAAK3E,UAAU,WAClB,uBAAKA,UAAU,iBACX,0DAGJ,uBAAKA,UAAU,qBAEXsE,EAAUlE,KAAI,SAAA6C,GACV,OACI,uBACIjD,UAAU,mBACVK,IAAK4C,EAAEuB,MACPtG,QAAU,kBAAMyG,EAAiB1B,EAAE5B,YAEnC,uBAAKrB,UAAU,0BAA2BiD,EAAEuB,OAC5C,uBACIxE,UAAU,2BACVlC,IAAKmF,EAAEuB,MAAQ,WACfzG,IAAKkF,EAAEwB,QACP/I,MAAOU,EAAY,EACnBT,OAAQc,EAAa,YCtB1C,SAASmI,IAAO,IAAD,EACcrE,mBAAS,MADvB,mBACXsE,EADW,KACDC,EADC,KAGlB,OAAO,yBAAK9E,UAAU,OAClB,yBAAKA,UAAU,cACX,yBAAKA,UAAU,YACX,0BAAM+E,KAAK,MAAMC,aAAW,QAA5B,gBADJ,UAIA,yBAAKhF,UAAU,eAEf,yBAAKA,UAAU,cACX,0BAAM+E,KAAK,MAAMC,aAAW,OAA5B,gBADJ,OACsD,uBAAGX,OAAO,SAASY,IAAI,sBAAsBhG,KAAK,8BAAlD,eAI1D,yBAAKe,UAAU,YACX6E,EACE,kBAAC,EAAD,CAAQzD,gBAAiByD,IACzB,kBAAC,EAAD,CAAaF,iBAAkBG,MCZzBI,QACW,cAA7B3I,OAAOwE,SAASoE,UAEe,UAA7B5I,OAAOwE,SAASoE,UAEhB5I,OAAOwE,SAASoE,SAASC,MACvB,2D,OCZNC,IAAS3F,OACP,kBAAC,IAAM4F,WAAP,KACE,kBAAC,EAAD,OAEFnK,SAASoK,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/E,MAAK,SAAAgF,GACJA,EAAaC,gBAEdC,OAAM,SAAAhG,GACLD,QAAQC,MAAMA,EAAMgB,a,iBEjJ5BzG,EAAOC,QAKN,WACC,aAQA,SAASyL,EAAgBjF,EAASkF,EAAUC,EAAOjF,GACjDkF,KAAKpF,QAAWA,EAChBoF,KAAKF,SAAWA,EAChBE,KAAKD,MAAWA,EAChBC,KAAKlF,SAAWA,EAChBkF,KAAKC,KAAW,cAEuB,oBAA5B/J,MAAMgK,mBACfhK,MAAMgK,kBAAkBF,KAAMH,GAozDlC,OAl0DA,SAAsBM,EAAOC,GAC3B,SAASC,IAASL,KAAKM,YAAcH,EACrCE,EAAKE,UAAYH,EAAOG,UACxBJ,EAAMI,UAAY,IAAIF,EAexBG,CAAaX,EAAiB3J,OAE9B2J,EAAgBY,aAAe,SAASX,EAAUC,GAChD,IAAIW,EAA2B,CACzBC,QAAS,SAASC,GAChB,MAAO,IAAOC,EAAcD,EAAYE,MAAQ,KAGlD,MAAS,SAASF,GAChB,IACIrI,EADAwI,EAAe,GAGnB,IAAKxI,EAAI,EAAGA,EAAIqI,EAAYI,MAAMpM,OAAQ2D,IACxCwI,GAAgBH,EAAYI,MAAMzI,aAAc0I,MAC5CC,EAAYN,EAAYI,MAAMzI,GAAG,IAAM,IAAM2I,EAAYN,EAAYI,MAAMzI,GAAG,IAC9E2I,EAAYN,EAAYI,MAAMzI,IAGpC,MAAO,KAAOqI,EAAYO,SAAW,IAAM,IAAMJ,EAAe,KAGlEK,IAAK,SAASR,GACZ,MAAO,iBAGTS,IAAK,SAAST,GACZ,MAAO,gBAGTU,MAAO,SAASV,GACd,OAAOA,EAAYW,cAI3B,SAASC,EAAIC,GACX,OAAOA,EAAGC,WAAW,GAAGC,SAAS,IAAIC,cAGvC,SAASf,EAAcgB,GACrB,OAAOA,EACJC,QAAQ,MAAO,QACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,gBAAyB,SAASL,GAAM,MAAO,OAASD,EAAIC,MACpEK,QAAQ,yBAAyB,SAASL,GAAM,MAAO,MAASD,EAAIC,MAGzE,SAASP,EAAYW,GACnB,OAAOA,EACJC,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,gBAAyB,SAASL,GAAM,MAAO,OAASD,EAAIC,MACpEK,QAAQ,yBAAyB,SAASL,GAAM,MAAO,MAASD,EAAIC,MA6CzE,MAAO,YAtCP,SAA0B3B,GACxB,IACIvH,EAAGwJ,EANoBnB,EAKvBoB,EAAe,IAAIf,MAAMnB,EAASlL,QAGtC,IAAK2D,EAAI,EAAGA,EAAIuH,EAASlL,OAAQ2D,IAC/ByJ,EAAazJ,IATYqI,EASad,EAASvH,GAR1CmI,EAAyBE,EAAYxE,MAAMwE,IAalD,GAFAoB,EAAaC,OAETD,EAAapN,OAAS,EAAG,CAC3B,IAAK2D,EAAI,EAAGwJ,EAAI,EAAGxJ,EAAIyJ,EAAapN,OAAQ2D,IACtCyJ,EAAazJ,EAAI,KAAOyJ,EAAazJ,KACvCyJ,EAAaD,GAAKC,EAAazJ,GAC/BwJ,KAGJC,EAAapN,OAASmN,EAGxB,OAAQC,EAAapN,QACnB,KAAK,EACH,OAAOoN,EAAa,GAEtB,KAAK,EACH,OAAOA,EAAa,GAAK,OAASA,EAAa,GAEjD,QACE,OAAOA,EAAaE,MAAM,GAAI,GAAGC,KAAK,MAClC,QACAH,EAAaA,EAAapN,OAAS,IAQxBwN,CAAiBtC,GAAY,QAJlD,SAAuBC,GACrB,OAAOA,EAAQ,IAAOc,EAAcd,GAAS,IAAO,eAGMsC,CAActC,GAAS,WAssD9E,CACLuC,YAAazC,EACbjC,MArsDF,SAAmB2E,EAAOC,GACxBA,OAAsB,IAAZA,EAAqBA,EAAU,GAEzC,IA6KIC,EA7KAC,EAAa,GAEbC,EAAyB,CAAEC,KAAMC,IACjCC,EAAyBD,GAMzBE,EAASC,GAAuB,SAAS,GAQzCC,EAASD,GAAuB,QAAQ,GAExCE,EAASF,GAAuB,MAAM,GAEtCG,EAASH,GAAuB,MAAM,GAUtCI,EAAU,kBACVC,EAAUC,GAAqB,CAAC,KAAM,KAAM,KAAM,KAAM,MAAM,GAAM,GAKpEC,EAAUP,GAAuB,KAAK,GAEtCQ,EAAUR,GAAuB,MAAM,GAUvCS,EAAUT,GAAuB,SAAS,GAK1CU,EAAUV,GAAuB,SAAS,GAY1CW,EAAUX,GAAuB,SAAS,GAE1CY,EAAUZ,GAAuB,MAAM,GAEvCa,EAAUb,GAAuB,QAAQ,GAEzCc,EAAUd,GAAuB,SAAS,GAE1Ce,EAAUf,GAAuB,MAAM,GAEvCgB,EAAUhB,GAAuB,QAAQ,GAQzCiB,EAAUjB,GAAuB,SAAS,GAK1CkB,EAAUlB,GAAuB,SAAS,GAK1CmB,EAAUnB,GAAuB,UAAU,GAE3CoB,EAAUpB,GAAuB,KAAK,GAEtCqB,EAAUrB,GAAuB,SAAS,GAK1CsB,EAAUtB,GAAuB,QAAQ,GAMzCuB,EAAU,UACVC,EAAUlB,GAAqB,CAAC,CAAC,IAAK,KAAM,MAAM,GAAO,GACzDmB,EAAU,gBACVC,EAAUpB,GAAqB,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,MAAM,GAAO,GACjFqB,EAAU,WAAa,OAAO7D,MAC9B8D,EAAU,UACVC,EAAUvB,GAAqB,CAAC,CAAC,IAAK,KAAM,MAAM,GAAO,GAEzDwB,EAAU9B,GAAuB,KAAK,GAEtC+B,EAAU/B,GAAuB,KAAK,GAQtCgC,EAAUhC,GAAuB,KAAK,GAItCiC,EAAUC,GAAqB,UAC/BC,EAAU,SACVC,EAAU9B,GAAqB,CAAC,IAAK,MAAM,GAAO,GAClD+B,EAAU,SACVC,EAAUhC,GAAqB,CAAC,CAAC,IAAK,OAAO,GAAO,GAEpDiC,EAAUvC,GAAuB,KAAK,GAItCwC,EAAUN,GAAqB,UAE/BO,EAAUzC,GAAuB,KAAM,GACvC0C,EAAU,YACVC,EAAUrC,GAAqB,CAAC,KAAM,KAAM,MAAO,GAAM,GAIzDsC,EAAUV,GAAqB,WAE/BW,EAAU7C,GAAuB,QAAQ,GAEzC8C,EAAU9C,GAAuB,SAAS,GAI1C+C,EAAUb,GAAqB,WAC/Bc,EAAU,SACVC,GAAU3C,GAAqB,CAAC,KAAM,MAAM,GAAO,GACnD4C,GAAUhB,GAAqB,cAC/BiB,GAAU,aACVC,GAAU9C,GAAqB,CAAC,IAAK,KAAM,KAAM,OAAO,GAAO,GAE/D+C,GAAuB,EACvBC,GAAuB,EACvBC,GAAuB,CAAC,CAAEvL,KAAM,EAAGC,OAAQ,IAC3CuL,GAAuB,EACvBC,GAAuB,GACvBC,GAAuB,EAEvBC,GAAmB,GAIvB,GAAI,cAAenE,EAAS,CAC1B,KAAMA,EAAQoE,aAAajE,GACzB,MAAM,IAAIzM,MAAM,mCAAqCsM,EAAQoE,UAAY,MAG3E9D,EAAwBH,EAAuBH,EAAQoE,WAGzD,SAAS9F,KACP,OAAOyB,EAAMsE,UAAUP,GAAcD,IAuBvC,SAASrD,GAAuBlC,EAAMgG,GACpC,MAAO,CAAE1K,KAAM,UAAW0E,KAAMA,EAAMgG,WAAYA,GAGpD,SAASxD,GAAqBtC,EAAOG,EAAU2F,GAC7C,MAAO,CAAE1K,KAAM,QAAS4E,MAAOA,EAAOG,SAAUA,EAAU2F,WAAYA,GAWxE,SAAS5B,GAAqB3D,GAC5B,MAAO,CAAEnF,KAAM,QAASmF,YAAaA,GAGvC,SAASwF,GAAsBC,GAC7B,IAAwCC,EAApCC,EAAUX,GAAoBS,GAElC,GAAIE,EACF,OAAOA,EAGP,IADAD,EAAID,EAAM,GACFT,GAAoBU,IAC1BA,IASF,IALAC,EAAU,CACRlM,MAFFkM,EAAUX,GAAoBU,IAEZjM,KAChBC,OAAQiM,EAAQjM,QAGXgM,EAAID,GACmB,KAAxBzE,EAAMb,WAAWuF,IACnBC,EAAQlM,OACRkM,EAAQjM,OAAS,GAEjBiM,EAAQjM,SAGVgM,IAIF,OADAV,GAAoBS,GAAOE,EACpBA,EAIX,SAASC,GAAoBC,EAAUC,GACrC,IAAIC,EAAkBP,GAAsBK,GACxCG,EAAkBR,GAAsBM,GAE5C,MAAO,CACLtM,MAAO,CACLyM,OAAQJ,EACRpM,KAAQsM,EAAgBtM,KACxBC,OAAQqM,EAAgBrM,QAE1BoG,IAAK,CACHmG,OAAQH,EACRrM,KAAQuM,EAAcvM,KACtBC,OAAQsM,EAActM,SAK5B,SAASwM,GAAS3H,GACZuG,GAAcG,KAEdH,GAAcG,KAChBA,GAAiBH,GACjBI,GAAsB,IAGxBA,GAAoBiB,KAAK5H,IAO3B,SAAS6H,GAAyB7H,EAAUC,EAAOjF,GACjD,OAAO,IAAI+E,EACTA,EAAgBY,aAAaX,EAAUC,GACvCD,EACAC,EACAjF,GAIJ,SAAS+H,KACP,IAAI+E,EAAIC,EAAIC,EAER1N,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAShB,IANAL,EAAKvB,GACLwB,EAAK,IACLC,EAAKI,QACMxF,IACToF,EAAKK,MAEAL,IAAOpF,GACZmF,EAAGH,KAAKI,IACRA,EAAKI,QACMxF,IACToF,EAAKK,MAWT,OARIN,IAAOnF,IACT4D,GAAesB,EACfC,EAAYA,GAEdD,EAAKC,EAELlB,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAGT,SAASM,KACP,IAAIN,EAAIC,EAAQO,EAAIC,EAEhBjO,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAWhB,GARAL,EAAKvB,GAtVM,UAuVP9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EAxVS,QAyVTxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAS1E,IAEpC8E,IAAOnF,EAET,GADK4F,OACM5F,EAAY,CAGrB,IAFA0F,EAAK,GACLC,EAAKE,KACEF,IAAO3F,GACZ0F,EAAGV,KAAKW,GACRA,EAAKE,KAEHH,IAAO1F,GACT4D,GAAesB,EAEfA,EADAC,EAtWK,CACLzL,KAAM,QACNC,OAoWY+L,KAGZ/B,GAAcuB,EACdA,EAAKlF,QAGP2D,GAAcuB,EACdA,EAAKlF,OAGP2D,GAAcuB,EACdA,EAAKlF,EAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAGT,SAASW,KACP,IAAIX,EAAIC,EAAQO,EAAQI,EAAQC,EAAQC,EAAIC,EAAUC,EAElDxO,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,OAAI2N,GACF1B,GAAc0B,EAAOC,QAEdD,EAAOE,SAGhBL,EAAKvB,GAjYM,SAkYP9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EAnYS,OAoYTxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASxE,IAEpC4E,IAAOnF,IACTmF,EAAK,MAEHA,IAAOnF,GACJmG,OACMnG,IACT0F,EAAKU,QACMpG,GACJmG,OACMnG,GAhZN,OAiZCH,EAAM5N,OAAO0R,GAAa,IAC5BmC,EAlZC,KAmZDnC,IAAe,IAEfmC,EAAK9F,EACmB,IAApBgE,IAAyBe,GAASvE,IAEpCsF,IAAO9F,GACJmG,OACMnG,IACT+F,EAAKM,QACMrG,GACJmG,OACMnG,GACTgG,EAAKrC,GA7ZV,OA8ZS9D,EAAM5N,OAAO0R,GAAa,IAC5BsC,EA/ZP,KAgaOtC,IAAe,IAEfsC,EAAMjG,EACkB,IAApBgE,IAAyBe,GAAStE,IAEpCwF,IAAQjG,GACJmG,OACMnG,IACVkG,EAAMI,QACMtG,GACV4D,GAAeoC,EAEfA,EADAC,EAAsBC,IAW1BvC,GAAcqC,EACdA,EAAKhG,GAEHgG,IAAOhG,IACTgG,EAAK,MAEHA,IAAOhG,IACTiG,EAAML,QACM5F,GACV4D,GAAesB,EAEfA,EADAC,EA7bR,SAASpL,EAAYnI,EAAQC,GACrC,MAAO,CACL6H,KAAM,SACNK,aACAnI,SACAC,SAwbmB0U,CAAQb,EAAIK,EAAIC,KAOvBrC,GAAcuB,EACdA,EAAKlF,KAeb2D,GAAcuB,EACdA,EAAKlF,KAeb2D,GAAcuB,EACdA,EAAKlF,GAGPiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,GAGT,SAASmB,KACP,IAAInB,EAAIC,EAAIC,EAER1N,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAYhB,GATAL,EAAKvB,GACLwB,EAAK,GACDzE,EAAQ8F,KAAK3G,EAAM4G,OAAO9C,MAC5ByB,EAAKvF,EAAM4G,OAAO9C,IAClBA,OAEAyB,EAAKpF,EACmB,IAApBgE,IAAyBe,GAASpE,IAEpCyE,IAAOpF,EACT,KAAOoF,IAAOpF,GACZmF,EAAGH,KAAKI,GACJ1E,EAAQ8F,KAAK3G,EAAM4G,OAAO9C,MAC5ByB,EAAKvF,EAAM4G,OAAO9C,IAClBA,OAEAyB,EAAKpF,EACmB,IAApBgE,IAAyBe,GAASpE,SAI1CwE,EAAKnF,EAUP,OARImF,IAAOnF,IACT4D,GAAesB,EACfC,EAvgBS,SAAU/G,MAygBrB8G,EAAKC,EAELlB,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAGT,SAASO,KACP,IAAIP,EAAIC,EAAQO,EAAIC,EAAIG,EAAIY,EAExBhP,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAWhB,GARAL,EAAKvB,GACiC,KAAlC9D,EAAMb,WAAW2E,KACnBwB,EA5hBU,IA6hBVxB,OAEAwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASlE,IAEpCsE,IAAOnF,EAET,GADKmG,OACMnG,EA0BT,GAzBA0F,EAAK/B,IACLgC,EAAKgB,QACM3G,GAriBH,OAsiBFH,EAAM5N,OAAO0R,GAAa,IAC5BmC,EAviBI,KAwiBJnC,IAAe,IAEfmC,EAAK9F,EACmB,IAApBgE,IAAyBe,GAASjE,IAEpCgF,IAAO9F,GACT4D,GAAe8B,EAEfA,EADAC,EAAaA,IAGbhC,GAAc+B,EACdA,EAAK1F,KAGP2D,GAAc+B,EACdA,EAAK1F,GAEH0F,IAAO1F,IACT0F,EAAK,MAEHA,IAAO1F,EAET,IADA2F,EAAKC,QACM5F,EAAY,CAGrB,IAFA8F,EAAK,GACLY,EAAKE,KACEF,IAAO1G,GACZ8F,EAAGd,KAAK0B,GACRA,EAAKE,KAEHd,IAAO9F,GACT4D,GAAesB,EAEfA,EADAC,EAnkBC,CACLzL,KAAM,QACN5E,SAikBiB4Q,EAhkBjBtM,MAgkBqB0M,KAGjBnC,GAAcuB,EACdA,EAAKlF,QAGP2D,GAAcuB,EACdA,EAAKlF,OAGP2D,GAAcuB,EACdA,EAAKlF,OAGP2D,GAAcuB,EACdA,EAAKlF,OAGP2D,GAAcuB,EACdA,EAAKlF,EAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAGT,SAAS0B,KACP,IAAI1B,EAAIC,EAAQO,EAAQI,EAEpBpO,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,OAAI2N,GACF1B,GAAc0B,EAAOC,QAEdD,EAAOE,SAGhBL,EAAKvB,GArmBO,UAsmBR9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EAvmBU,QAwmBVxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAShE,IAEpCoE,IAAOnF,IACTmF,EAAK,MAEHA,IAAOnF,GACJmG,OACMnG,IACT0F,EAAKU,QACMpG,GACJmG,OACMnG,IACT8F,EAqCV,WACE,IAAIZ,EAEAxN,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,QAGhBL,EAyBF,WACE,IAAIA,EAAIC,EAAQO,EAEZhO,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAGhBL,EAAKvB,GAxsBO,UAysBR9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EA1sBU,QA2sBVxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAS/D,IAEpCmE,IAAOnF,GACJmG,OACMnG,IACT0F,EAAKY,QACMtG,GACT4D,GAAesB,EAEfA,EADAC,EAntBK,CAAEzL,KAAM,eACNN,MAktBMsM,KAWjB/B,GAAcuB,EACdA,EAAKlF,GAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EApEF2B,MACM7G,IACTkF,EAqEJ,WACE,IAAIA,EAAIC,EAAQO,EAEZhO,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAGhBL,EAAKvB,GAzxBM,OA0xBP9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EA3xBS,KA4xBTxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASvE,IAEpC2E,IAAOnF,GACJmG,OACMnG,IACT0F,EAAKW,QACMrG,GACT4D,GAAesB,EAEfA,EADAC,EA5vBK,CAAEzL,KAAM,gBACN9H,OA2vBM8T,KAWjB/B,GAAcuB,EACdA,EAAKlF,GAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAhHA4B,MACM9G,IACTkF,EAwNN,WACE,IAAIA,EAAIC,EAEJzN,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAGhBL,EAAKvB,GA72BO,UA82BR9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EA/2BU,QAg3BVxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASxD,IAEpC4D,IAAOnF,IACT4D,GAAesB,EACfC,EAp3BS,CAAEzL,KAAM,gBA03BnB,OAJAwL,EAAKC,EAELlB,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EApPE6B,MACM/G,IACTkF,EAqPR,WACE,IAAIA,EAAIC,EAEJzN,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAGhBL,EAAKvB,GAv4BO,UAw4BR9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EAz4BU,QA04BVxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASvD,IAEpC2D,IAAOnF,IACT4D,GAAesB,EACfC,EA94BS,CAAEzL,KAAM,gBAo5BnB,OAJAwL,EAAKC,EAELlB,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAjRI8B,MACMhH,IACTkF,EA6GV,WACE,IAAIA,EAAIC,EAAQO,EAAIC,EAAQe,EAExBhP,EAAuB,GAAdiM,GAAmB,EAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAGhBL,EAAKvB,GAxxBO,UAyxBR9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EA1xBU,QA2xBVxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAS9D,IAEpCkE,IAAOnF,GACJmG,OACMnG,IACT0F,EAAKiB,QACM3G,GAlyBH,OAmyBFH,EAAM5N,OAAO0R,GAAa,IAC5BgC,EApyBI,KAqyBJhC,IAAe,IAEfgC,EAAK3F,EACmB,IAApBgE,IAAyBe,GAAS7D,IAEpCyE,IAAO3F,GACJmG,OACMnG,GA1yBP,SA2yBEH,EAAM5N,OAAO0R,GAAa,IAC5B+C,EA5yBA,OA6yBA/C,IAAe,IAEf+C,EAAK1G,EACmB,IAApBgE,IAAyBe,GAAS5D,IAEpCuF,IAAO1G,IAhzBT,UAizBIH,EAAM5N,OAAO0R,GAAa,IAC5B+C,EAlzBF,QAmzBE/C,IAAe,IAEf+C,EAAK1G,EACmB,IAApBgE,IAAyBe,GAAS3D,IAEpCsF,IAAO1G,IAtzBX,OAuzBMH,EAAM5N,OAAO0R,GAAa,IAC5B+C,EAxzBJ,KAyzBI/C,IAAe,IAEf+C,EAAK1G,EACmB,IAApBgE,IAAyBe,GAAS1D,IAEpCqF,IAAO1G,IA5zBb,SA6zBQH,EAAM5N,OAAO0R,GAAa,IAC5B+C,EA9zBN,OA+zBM/C,IAAe,IAEf+C,EAAK1G,EACmB,IAApBgE,IAAyBe,GAASzD,OAK1CoF,IAAO1G,GACT4D,GAAesB,EAEfA,EADAC,EAt0BD,CAAEzL,KAAM,cACNN,MAq0BYsM,EAp0BZ9K,UAo0BgB8L,KAGjB/C,GAAcuB,EACdA,EAAKlF,KAOT2D,GAAcuB,EACdA,EAAKlF,KAWX2D,GAAcuB,EACdA,EAAKlF,GAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAjNM+B,MACMjH,IACTkF,EAgRZ,WACE,IAAIA,EAAIC,EAAQO,EAAIC,EAEhBjO,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAGhBL,EAAKvB,GAj6BO,WAk6BR9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EAn6BU,SAo6BVxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAStD,IAEpC0D,IAAOnF,GACJmG,OACMnG,IACT0F,EAAKiB,QACM3G,GAC6B,MAAlCH,EAAMb,WAAW2E,KACnBgC,EA76BI,IA86BJhC,OAEAgC,EAAK3F,EACmB,IAApBgE,IAAyBe,GAASrD,IAEpCiE,IAAO3F,IAj7BL,UAk7BAH,EAAM5N,OAAO0R,GAAa,IAC5BgC,EAn7BE,QAo7BFhC,IAAe,IAEfgC,EAAK3F,EACmB,IAApBgE,IAAyBe,GAASpD,KAGtCgE,IAAO3F,GACT4D,GAAesB,EAEfA,EADAC,EAz7BG,CAAEzL,KAAM,eAAgBoB,MAy7Bd4K,KAGb/B,GAAcuB,EACdA,EAAKlF,KAWX2D,GAAcuB,EACdA,EAAKlF,GAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAhVQgC,MACMlH,IACTkF,EAiVd,WACE,IAAIA,EAAIC,EAAQO,EAEZhO,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAGhBL,EAAKvB,GA39BO,SA49BR9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EA79BU,OA89BVxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASnD,IAEpCuD,IAAOnF,GACJmG,OACMnG,IACT0F,EAAKyB,QACMnH,GACT4D,GAAesB,EAEfA,EADAC,EAt+BK,CAAEzL,KAAM,aACNN,MAq+BMsM,KAWjB/B,GAAcuB,EACdA,EAAKlF,GAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EA5XUkC,IAUjB,OAFAnD,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAvEMmC,MACMrH,GACJ4F,OACM5F,GACT4D,GAAesB,EAEfA,EADAC,EA1nBA,SAASzN,EAAK0B,GACtB,MAAO,CAAEM,KAAM,SAAUhC,MAAK0B,SAynBjBkO,CAAQ5B,EAAII,KAuB3BnC,GAAcuB,EACdA,EAAKlF,GAGPiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,GA0ZT,SAASkB,KACP,IAAIlB,EAAIC,EAAIC,EAAIM,EAEZhO,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAWhB,GARAL,EAAKvB,GACD9B,EAAQ2E,KAAK3G,EAAM4G,OAAO9C,MAC5BwB,EAAKtF,EAAM4G,OAAO9C,IAClBA,OAEAwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASjD,IAEpCqD,IAAOnF,EAAY,CASrB,IARAoF,EAAK,GACDrD,EAAQyE,KAAK3G,EAAM4G,OAAO9C,MAC5B+B,EAAK7F,EAAM4G,OAAO9C,IAClBA,OAEA+B,EAAK1F,EACmB,IAApBgE,IAAyBe,GAAS/C,IAEjC0D,IAAO1F,GACZoF,EAAGJ,KAAKU,GACJ3D,EAAQyE,KAAK3G,EAAM4G,OAAO9C,MAC5B+B,EAAK7F,EAAM4G,OAAO9C,IAClBA,OAEA+B,EAAK1F,EACmB,IAApBgE,IAAyBe,GAAS/C,IAGtCoD,IAAOpF,GACT4D,GAAesB,EAEfA,EADAC,EAAKlD,MAGL0B,GAAcuB,EACdA,EAAKlF,QAGP2D,GAAcuB,EACdA,EAAKlF,EAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EA4DT,SAASoB,KACP,IAAIpB,EAAIC,EAAIC,EAAIM,EAEZhO,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAWhB,GARAL,EAAKvB,GACiC,MAAlC9D,EAAMb,WAAW2E,KACnBwB,EA/mCU,IAgnCVxB,OAEAwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAS3C,IAEpC+C,IAAOnF,EAAY,CAGrB,IAFAoF,EAAK,GACLM,EAAK6B,KACE7B,IAAO1F,GACZoF,EAAGJ,KAAKU,GACRA,EAAK6B,KAEHnC,IAAOpF,GAC6B,MAAlCH,EAAMb,WAAW2E,KACnB+B,EA5nCM,IA6nCN/B,OAEA+B,EAAK1F,EACmB,IAApBgE,IAAyBe,GAAS1C,IAEpCqD,IAAO1F,GACT4D,GAAesB,EAEfA,EADAC,EAAaC,EAjoCDxL,QAAO,SAACC,EAAKC,GAEzB,OADAD,EAAIC,EAAK,IAAMA,EAAK,GACbD,IACNK,OAAOC,OAAO,SAioCfwJ,GAAcuB,EACdA,EAAKlF,KAGP2D,GAAcuB,EACdA,EAAKlF,QAGP2D,GAAcuB,EACdA,EAAKlF,EAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAGT,SAASqC,KACP,IAAIrC,EAAQE,EAAQO,EAAQe,EAExBhP,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,OAAI2N,GACF1B,GAAc0B,EAAOC,QAEdD,EAAOE,SAGhBL,EAAKvB,GACAwC,OACMnG,IACToF,EAjIJ,WACE,IAAIF,EAAIC,EAAIC,EAAIM,EAEZhO,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAWhB,GARAL,EAAKvB,GACDzB,EAAQsE,KAAK3G,EAAM4G,OAAO9C,MAC5BwB,EAAKtF,EAAM4G,OAAO9C,IAClBA,OAEAwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAS5C,IAEpCgD,IAAOnF,EAAY,CASrB,IARAoF,EAAK,GACDrD,EAAQyE,KAAK3G,EAAM4G,OAAO9C,MAC5B+B,EAAK7F,EAAM4G,OAAO9C,IAClBA,OAEA+B,EAAK1F,EACmB,IAApBgE,IAAyBe,GAAS/C,IAEjC0D,IAAO1F,GACZoF,EAAGJ,KAAKU,GACJ3D,EAAQyE,KAAK3G,EAAM4G,OAAO9C,MAC5B+B,EAAK7F,EAAM4G,OAAO9C,IAClBA,OAEA+B,EAAK1F,EACmB,IAApBgE,IAAyBe,GAAS/C,IAGtCoD,IAAOpF,GACT4D,GAAesB,EAEfA,EADAC,EAAKlD,MAGL0B,GAAcuB,EACdA,EAAKlF,QAGP2D,GAAcuB,EACdA,EAAKlF,EAKP,OAFAiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EA2EAsC,MACMxH,IACToF,EAAKgB,MAEHhB,IAAOpF,GACJmG,OACMnG,GAC6B,KAAlCH,EAAMb,WAAW2E,KACnBgC,EAvqCI,IAwqCJhC,OAEAgC,EAAK3F,EACmB,IAApBgE,IAAyBe,GAASzC,IAEpCqD,IAAO3F,GACJmG,OACMnG,IACT0G,EAAKC,QACM3G,IACT0G,EAAKS,QACMnH,IACT0G,EAyPhB,WACE,IAAIxB,EAAIC,EAEJzN,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAGhBvB,KAj6CY,SAk6CRnE,EAAM5N,OAAO0R,GAAa,IAC5BuB,EAn6CU,OAo6CVvB,IAAe,IAEfuB,EAAKlF,EACmB,IAApBgE,IAAyBe,GAAS5B,IAEpC+B,IAAOlF,IACTkF,EAAKvB,GAx6CK,UAy6CN9D,EAAM5N,OAAO0R,GAAa,IAC5BwB,EA16CQ,QA26CRxB,IAAe,IAEfwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAS3B,IAEpC+B,IAAOnF,IACT4D,GAAesB,EACfC,EA/6CO5I,QAAQ6B,OAi7CjB8G,EAAKC,GAEPnB,KACIkB,IAAOlF,IACTmF,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAS7B,IAKxC,OAFAe,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EApSYuC,IAGLf,IAAO1G,GACJmG,OACMnG,GACT4D,GAAesB,EAEfA,EA1rCF,SAASxN,EAAK0B,GACtB,MAAO,CAAC1B,EAAK0B,GAwrCEsO,CAAQtC,EAAIsB,KAOnB/C,GAAcuB,EACdA,EAAKlF,KAOT2D,GAAcuB,EACdA,EAAKlF,KAOT2D,GAAcuB,EACdA,EAAKlF,KAGP2D,GAAcuB,EACdA,EAAKlF,GAGPiE,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,GAGT,SAASyB,KACP,IAAIzB,EAAIC,EAAIC,EAAIM,EAAIC,EAAIG,EAAIY,EAAIX,EAE5BrO,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAgBhB,GAbAvB,KACAkB,EAAKvB,GACLwB,EAAKxB,GACDlB,EAAQ+D,KAAK3G,EAAM4G,OAAO9C,MAC5ByB,EAAKvF,EAAM4G,OAAO9C,IAClBA,OAEAyB,EAAKpF,EACmB,IAApBgE,IAAyBe,GAASrC,IAEpC0C,IAAOpF,IACToF,EAAK,MAEHA,IAAOpF,EAAY,CASrB,GARA0F,EAAK,GACD/C,EAAQ6D,KAAK3G,EAAM4G,OAAO9C,MAC5BgC,EAAK9F,EAAM4G,OAAO9C,IAClBA,OAEAgC,EAAK3F,EACmB,IAApBgE,IAAyBe,GAASnC,IAEpC+C,IAAO3F,EACT,KAAO2F,IAAO3F,GACZ0F,EAAGV,KAAKW,GACJhD,EAAQ6D,KAAK3G,EAAM4G,OAAO9C,MAC5BgC,EAAK9F,EAAM4G,OAAO9C,IAClBA,OAEAgC,EAAK3F,EACmB,IAApBgE,IAAyBe,GAASnC,SAI1C8C,EAAK1F,EAEP,GAAI0F,IAAO1F,EAAY,CASrB,GARA2F,EAAKhC,GACiC,KAAlC9D,EAAMb,WAAW2E,KACnBmC,EAxwCM,IAywCNnC,OAEAmC,EAAK9F,EACmB,IAApBgE,IAAyBe,GAASlC,IAEpCiD,IAAO9F,EAAY,CASrB,GARA0G,EAAK,GACD/D,EAAQ6D,KAAK3G,EAAM4G,OAAO9C,MAC5BoC,EAAKlG,EAAM4G,OAAO9C,IAClBA,OAEAoC,EAAK/F,EACmB,IAApBgE,IAAyBe,GAASnC,IAEpCmD,IAAO/F,EACT,KAAO+F,IAAO/F,GACZ0G,EAAG1B,KAAKe,GACJpD,EAAQ6D,KAAK3G,EAAM4G,OAAO9C,MAC5BoC,EAAKlG,EAAM4G,OAAO9C,IAClBA,OAEAoC,EAAK/F,EACmB,IAApBgE,IAAyBe,GAASnC,SAI1C8D,EAAK1G,EAEH0G,IAAO1G,EAET2F,EADAG,EAAK,CAACA,EAAIY,IAGV/C,GAAcgC,EACdA,EAAK3F,QAGP2D,GAAcgC,EACdA,EAAK3F,EAEH2F,IAAO3F,IACT2F,EAAK,MAEHA,IAAO3F,EAETmF,EADAC,EAAK,CAACA,EAAIM,EAAIC,IAGdhC,GAAcwB,EACdA,EAAKnF,QAGP2D,GAAcwB,EACdA,EAAKnF,OAGP2D,GAAcwB,EACdA,EAAKnF,EAeP,OAbImF,IAAOnF,IACT4D,GAAesB,EACfC,EAj0CSwC,OAAOC,WAAWxJ,OAo0C7B4F,MADAkB,EAAKC,KAEMnF,IACTmF,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASxC,IAGxC0B,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAGT,SAASiC,KACP,IAAIjC,EAAIC,EAAIC,EAAIM,EAAIC,EAEhBjO,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAYhB,GATAvB,KACAkB,EAAKvB,GACiC,KAAlC9D,EAAMb,WAAW2E,KACnBwB,EA31CU,IA41CVxB,OAEAwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAShC,IAEpCoC,IAAOnF,EAAY,CAUrB,IATAoF,EAAKzB,GACL+B,EAAK,GACD1C,EAAQwD,KAAK3G,EAAM4G,OAAO9C,MAC5BgC,EAAK9F,EAAM4G,OAAO9C,IAClBA,OAEAgC,EAAK3F,EACmB,IAApBgE,IAAyBe,GAAS9B,IAEjC0C,IAAO3F,GACZ0F,EAAGV,KAAKW,GACJ3C,EAAQwD,KAAK3G,EAAM4G,OAAO9C,MAC5BgC,EAAK9F,EAAM4G,OAAO9C,IAClBA,OAEAgC,EAAK3F,EACmB,IAApBgE,IAAyBe,GAAS9B,IAGtCyC,IAAO1F,IACT4D,GAAewB,EACfM,EAAKzD,MAEPmD,EAAKM,KACM1F,GAC6B,KAAlCH,EAAMb,WAAW2E,KACnB+B,EA53CM,IA63CN/B,OAEA+B,EAAK1F,EACmB,IAApBgE,IAAyBe,GAAShC,IAEpC2C,IAAO1F,GACT4D,GAAesB,EAEfA,EADAC,EAAaC,IAGbzB,GAAcuB,EACdA,EAAKlF,KAGP2D,GAAcuB,EACdA,EAAKlF,QAGP2D,GAAcuB,EACdA,EAAKlF,EAUP,OARAgE,KACIkB,IAAOlF,IACTmF,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASjC,IAGxCmB,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAiDT,SAASU,KACP,IAAIV,EAAIC,EAEJzN,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAYhB,IATAvB,KACAkB,EAAK,GACD5B,EAAQkD,KAAK3G,EAAM4G,OAAO9C,MAC5BwB,EAAKtF,EAAM4G,OAAO9C,IAClBA,OAEAwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASxB,KAEjC4B,IAAOnF,GACZkF,EAAGF,KAAKG,GACJ7B,EAAQkD,KAAK3G,EAAM4G,OAAO9C,MAC5BwB,EAAKtF,EAAM4G,OAAO9C,IAClBA,OAEAwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASxB,KAW1C,OARAS,KACIkB,IAAOlF,IACTmF,EAAKnF,EACmB,IAApBgE,IAAyBe,GAAS1B,IAGxCY,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAGT,SAASiB,KACP,IAAIjB,EAAIC,EAEJzN,EAAuB,GAAdiM,GAAmB,GAC5B0B,EAASpB,GAAiBvM,GAE9B,GAAI2N,EAGF,OAFA1B,GAAc0B,EAAOC,QAEdD,EAAOE,OAYhB,IATAvB,KACAkB,EAAK,GACDzB,GAAQ+C,KAAK3G,EAAM4G,OAAO9C,MAC5BwB,EAAKtF,EAAM4G,OAAO9C,IAClBA,OAEAwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASrB,KAEjCyB,IAAOnF,GACZkF,EAAGF,KAAKG,GACJ1B,GAAQ+C,KAAK3G,EAAM4G,OAAO9C,MAC5BwB,EAAKtF,EAAM4G,OAAO9C,IAClBA,OAEAwB,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASrB,KAW1C,OARAM,KACIkB,IAAOlF,IACTmF,EAAKnF,EACmB,IAApBgE,IAAyBe,GAASvB,KAGxCS,GAAiBvM,GAAO,CAAE4N,QAAS3B,GAAa4B,OAAQL,GAEjDA,EAKT,IAFAnF,EAAaK,OAEMJ,GAAc2D,KAAgB9D,EAAM3N,OACrD,OAAO6N,EAMP,MAJIA,IAAeC,GAAc2D,GAAc9D,EAAM3N,QACnD6S,GAv9CK,CAAErL,KAAM,QA09CTuL,GACJlB,GACAD,GAAiBjE,EAAM3N,OAAS2N,EAAM4G,OAAO3C,IAAkB,KAC/DA,GAAiBjE,EAAM3N,OACnBuS,GAAoBX,GAAgBA,GAAiB,GACrDW,GAAoBX,GAAgBA,OAh0D/C,I","file":"static/js/main.9140134f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wat.60a7cae8.gif\";","module.exports = __webpack_public_path__ + \"static/media/dancing.5048d7fd.gif\";","module.exports = __webpack_public_path__ + \"static/media/egg-shake.8390f7e7.gif\";","module.exports = __webpack_public_path__ + \"static/media/hearts-1.5b77e3f2.gif\";","module.exports = __webpack_public_path__ + \"static/media/hearts-2.2d544598.gif\";","module.exports = __webpack_public_path__ + \"static/media/monkeys.89e5e36a.gif\";","module.exports = __webpack_public_path__ + \"static/media/falls.46bc27d5.gif\";","const EMOJI_PROTOCOL = 'emoji:';\n\nexport function loadSprite(sprite:string, state: any) {\n    const protocol = (new URL(sprite)).protocol;\n    const url = sprite.substr(protocol.length);\n    if (protocol === EMOJI_PROTOCOL) {\n        return loadEmojiSprite(url, state);\n    }\n\n    throw new Error('Non emoji symbols are not supported yet');\n}\n\nfunction loadEmojiSprite(emoji: string, state: any) {\n    return new Promise((res, rej) => {\n        const canvas = document.createElement('canvas');\n        const fontsize = 86 * (state?.scale ?? 1);\n        const size = fontsize * 1.2;\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            rej('No context 2d found');\n            return;\n        }\n\n        canvas.width = size;\n        canvas.height = size;\n        ctx.font = fontsize + 'px serif';\n\n        if (state?.flipped || state?.turned){ \n            if (state?.turned) {\n                ctx.scale(-1, 1);\n                ctx.translate(-size, 0)\n            }\n\n            if (state?.flipped) {\n                ctx.scale(1, -1);\n                ctx.translate(0, -size)\n            }\n\n            if (state?.flipped && state?.turned) {\n                ctx.scale(-1, -1);\n                ctx.translate(-size, -size)\n            }\n        }\n\n        ctx.fillText(emoji, 0, fontsize);\n        ctx.restore();\n        res(canvas);\n    })\n}\n","export const width = 640;\nexport const height = 480;\nexport const dpi_width = Math.floor(width / window.devicePixelRatio ?? 1);\nexport const dpi_height = Math.floor(height / window.devicePixelRatio ?? 1);","import * as React from 'react';\nimport { merge, from, timer, of } from 'rxjs';\nimport { repeat, ignoreElements, concatMap } from 'rxjs/operators';\nimport { dpi_width, dpi_height } from '../dimensions';\n\nexport const AnimationPreview = (props: any) => {\n    const [image, setImage] = React.useState(undefined);\n\n    React.useEffect(() => {\n        const frames = props.frames;\n        if (!frames.length) {\n            setImage(undefined);\n            return;\n        }\n\n        const sub = from(frames)\n            .pipe(\n                concatMap((frame: any) => {\n                    return merge(\n                        of(frame),\n                        timer(frame.duration).pipe(ignoreElements())\n                    )\n                }),\n                repeat()\n            )\n            .subscribe((frame: any) => {\n                setImage(frame.image);\n            });\n\n        // return destroy fn to unsubscribe;\n        return () => sub.unsubscribe();\n\n    }, [props.frames]);\n\n    if (!image) {\n        return null;\n    }\n\n    return <div>\n        <img alt=\"frame\" width={dpi_width} height={dpi_height} src={image} />\n    </div>\n}","import * as React from 'react';\nimport { width, height } from '../dimensions';\nconst GIF  = (window as any)['GIF'];\n\n    // const gifOutputRef = createRef<HTMLImageElement>();\n    // const outputLinkRef = createRef<HTMLAnchorElement>();\n\n\n\nexport const ExportGif = (props: { frames: any[] }) => {\n    const { frames } = props;\n\n    const onClick = React.useCallback(() => {\n        const gif = new (GIF as any)({\n            workers: 2,\n            quality: 10,\n            workerScript: process.env.PUBLIC_URL + '/gif.worker.js',\n            width,\n            height\n        });\n\n        frames.forEach((frame, i) => {\n            const img = new Image();\n            img.src = frame.image;\n            gif.addFrame(img, { delay: frame.duration });\n        });\n\n        gif.on('finished', function (blob: any) {\n            // TODO: destroy object url\n            const src = URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = src;\n            link.download = 'animato.gif';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n            gif.freeWorkers.forEach((w: any) => w.terminate());\n        });\n\n        try {\n            gif.render();\n        } catch (e) {\n            console.error(e);\n        }\n\n        return () => {\n            gif.destroy();\n        }\n    }, [frames]);\n\n    return <button onClick={onClick}>Download .gif</button>;\n}","import React from 'react';\nimport { dpi_height, dpi_width } from '../dimensions';\nimport './Frame.scss';\n\nexport function Frame (props:any) {\n    return <div className=\"frame\" style={{ width: dpi_width, height: dpi_height }} >\n        <div className=\"frame_title\">#{props.index}</div>\n        <img alt={'frame' + props.index} src={props.src} width={dpi_width} height={dpi_height} />\n    </div>\n}","import * as React from 'react';\nimport { Frame } from './Frame';\nimport './FramesPreview.scss';\n\nexport function FramesPreview(props: { frames: any[] }) {\n    const { frames } = props;\n    return <div className=\"frames-preview\">{\n        frames.map((frame, index) => <Frame key={frame.image} src={frame.image} index={index} />)\n    }</div>\n}","import React, { useEffect, useState } from 'react';\nimport { AnimationPreview } from './AnimationPreview';\nimport { ExportGif } from './ExportGif';\nimport { FramesPreview } from './FramesPreview';\nimport './Preview.scss';\n\n\nexport const Preview = (props: { frames: any[] }) => {\n    const [frames, setFrames] = useState([] as any[]);\n\n    useEffect(() => {\n        // waits for frame.image promise to resolve\n        // then replaces that promise with resulting image\n        // TODO: refactor this\n        Promise.all(\n            props.frames.map(frame => frame.image.then((image: any) => ({ ...frame, image })))\n        )\n        .then(setFrames)\n    }, [props.frames]);\n\n    if (!frames.length) {\n        return null;\n    }\n\n    return <div className=\"preview\">\n        <AnimationPreview frames={frames} />\n\n        <ExportGif frames={frames}/>\n\n        <FramesPreview frames={frames} />\n    </div>\n}","import * as React from 'react';\nimport './ErrorMessage.scss';\n\nexport function ErrorMessage(props: any) {\n    const { error } = props;\n    const message = error?.message;\n    const position = error?.location?.start;\n\n    return <div className=\"error-message\">\n        <p>{ message }</p>\n\n        { position\n        ? <p>{`line ${position.line}, column ${position.column}`}</p>\n        : null\n        }\n    </div>\n}","import React, { useMemo, useState, useEffect } from 'react';\nimport { frame } from '../core';\nimport parser from '../core/parser/parser';\nimport { loadSprite } from '../core/sprites/sprites';\nimport { height, width } from './dimensions';\nimport './Editor.scss';\nimport { Preview } from './Preview/Preview';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { ErrorMessage } from './ErrorMessage/ErrorMessage';\n\n\nexport function Editor(props: any) {\n    const [scenario, setScenario] = useState(props.defaultScenario);\n    const [error, setError] = useState<any>(undefined);\n\n    // this effect and state are for debouncing text edit {{{\n    // TODO: refactor\n    const [onChange, setOnChange] = useState({ change: (() => void 0) as any });\n    useEffect(() => {\n        const subject = new Subject<string>();\n\n        const subscription = subject\n            .pipe(\n                debounceTime(300)\n            )\n            .subscribe((value:string) => {\n                setScenario(value);\n            })\n\n        setOnChange({\n            change: (value: any) => subject.next(value)\n        });\n\n        return () => {\n            subscription.unsubscribe();\n        }\n    }, [ setOnChange ]);\n    // }}}\n\n    // react to scenario change to render the frames {{{\n    const frames: any[] = useMemo(() => {\n        let frames = [];\n        try {\n            const data = parser.parse(scenario);\n            frames = frame(data);\n            setError(undefined);\n        } catch (err) {\n            setError(err);\n        }\n\n        const frameImages = frames.map((frame: any) => {\n            const canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                throw new Error('no 2d context found');\n            }\n\n            ctx.fillStyle = '#ffffff';\n            ctx.fillRect(0, 0, width, height);\n\n            const entries = Object.values(frame.objects);\n            const image = Promise.all(\n                entries.map((entry: any) => {\n                    return loadSprite(entry.sprite, entry.state).then(img => {\n                        return { img, entry }\n                    });\n                })\n            ).then(entries => {\n                entries.forEach(({ img, entry }: any) => {\n                    ctx.drawImage(img, entry.state.x, entry.state.y);\n\n                    if (entry.says) {\n                        ctx.fillStyle = '#000000';\n                        ctx.font = '32px serif';\n                        ctx.fillText(entry.says, entry.state.x, entry.state.y);\n                    }\n\n                    ctx.drawImage(img, entry.state.x, entry.state.y);\n                });\n\n                // add watermark\n                ctx.fillStyle = '#00000066';\n                ctx.font = '24px monospace';\n                ctx.fillText('framd.cc', 500, 460);\n\n                return new Promise((res, rej) => {\n                    // TODO: free blob url on re-render\n                    canvas.toBlob((blob) => res(URL.createObjectURL(blob)));\n                })\n            });\n\n            return { ...frame, image };\n        });\n\n        return frameImages;\n    }, [scenario]);\n    // }}}\n\n    return <div className=\"editor\">\n            <div className=\"editor_scenario\">\n                <div className=\"editor_textareawrapper\">\n                    <textarea defaultValue={scenario} onChange={e => onChange.change(e.target.value)} />\n                </div>\n            </div>\n            <div className=\"editor_preview\">\n                { error\n                ? <div className=\"editor_error\"><ErrorMessage error={error} /></div>\n                : null\n                }\n                <Preview frames={ frames } />\n            </div>\n        </div>\n}","// 0 define json\n// 1 render json to canvas\n// 2 parse text to json\n// 3 create web app\n// 4 ...\n// 5 PROFIT\n\n\nimport merge from 'lodash/merge'\n\nexport function frame(data) {\n    let objects;\n\n    const frames = data.map(entry => {\n        if (entry.type === 'scene') {\n            objects = entry.values.reduce((acc, curr) => {\n                acc[curr.objectName] =  {\n                    sprite: curr.sprite,\n                    state: merge({ x: 0, y: 0, scale: 1, flipped: false, turned: false }, curr.state)\n                };\n                return acc;\n            }, Object.create(null));\n\n            return null;\n        }\n\n        if (entry.type === 'frame') {\n\n            const frame = {\n                duration: entry.duration || 1000,\n                objects: merge({}, objects)\n            };\n\n            entry.value.forEach(action => {\n                if (action.type !== 'action') {\n                    return null;\n                }\n\n                const key = action.key;\n                const value = action.value;\n\n                if (!(key in objects)) {\n                    throw new Error(`Unknown key ${key}`);\n                }\n\n                const object = objects[key];\n\n                if (value.type === 'sprite-action') {\n                    const sprite = value.sprite;\n                    frame.objects[key].sprite = sprite;\n                    objects[key].sprite = sprite;\n                }\n\n                if (value.type === 'move-action') {\n                    const d = value.value;\n                    const shift =\n                        { right: { x: d, y: 0 }\n                        , left:  { x: -d, y: 0 }\n                        , up:    { x: 0, y: -d }\n                        , down:  { x: 0, y: d }\n                        }[value.direction];\n\n                    const update = merge({}, object.state, { x: object.state.x + shift.x, y: object.state.y + shift.y });\n                    frame.objects[key].state = update;\n                    objects[key].state = update;\n                }\n\n                if (value.type === 'turn-action') {\n                    const turned = !objects[key].state.turned;\n                    const update = merge({}, objects[key].state, { turned });\n                    frame.objects[key].state = update;\n                    objects[key].state = update;\n                }\n\n                if (value.type === 'flip-action') {\n                    const flipped = !objects[key].state.flipped;\n                    const update = merge({}, objects[key].state, { flipped });\n                    frame.objects[key].state = update;\n                    objects[key].state = update;\n                }\n\n                if (value.type === 'scale-action') {\n                    const scale = object.state.scale * value.times;\n                    const update = merge({}, objects[key].state, { scale });\n                    frame.objects[key].state = update;\n                    objects[key].state = update;\n                }\n\n                if (value.type === 'state-action') {\n                    const update = merge({}, objects[key].state, value.value);;\n                    frame.objects[key].state = update;\n                    objects[key].state = update;\n                }\n\n                if (value.type === 'say-action') {\n                    frame.objects[key].says = value.value;\n                }\n            });\n\n            return frame;\n        }\n\n        throw new Error('Unknown entry');\n    })\n    .filter(x=>x);\n\n    return frames;\n}","import raw from \"raw.macro\";\n\nexport const templates =\n    [ ['Wait, WHAT?',        raw('./wat.txt'), require('./wat.gif')]\n    , ['Dancing',            raw('./dancing.txt'), require('./dancing.gif')]\n    , ['Egg',                raw('./egg-shake.txt'), require('./egg-shake.gif')]\n    , ['Hearts-1',           raw('./hearts-1.txt'), require('./hearts-1.gif')]\n    , ['Hearts-2',           raw('./hearts-2.txt'), require('./hearts-2.gif')]\n    , ['Three Wise Monkeys', raw('./monkeys.txt'), require('./monkeys.gif')]\n    , ['Fan',                raw('./falls.txt'), require('./falls.gif')]\n    ]\n    .map(([title, scenario, preview]) => {\n        return { title, scenario, preview }\n    })","import * as React from 'react';\nimport { templates } from './examples';\nimport { dpi_height, dpi_width } from '../Editor/dimensions';\nimport './Landing.scss';\n\nexport const LandingPage = (props: any) => {\n    const { onTemplateSelect } = props;\n    return <div className=\"landing\">\n        <div className=\"landing-title\">\n            <h1>Choose a template to Start:</h1>\n        </div>\n        \n        <div className=\"landing-templates\">\n        {\n            templates.map(d => {\n                return (\n                    <div\n                        className=\"landing-template\"\n                        key={d.title}\n                        onClick={ () => onTemplateSelect(d.scenario) }\n                    >\n                        <div className=\"landing-template-title\">{ d.title }</div>\n                        <img\n                            className=\"landing-template-preview\"\n                            alt={d.title + ' preview'}\n                            src={d.preview}\n                            width={dpi_width / 2}\n                            height={dpi_height / 2}\n                            />\n                    </div>\n                )\n            })\n        }</div>\n    </div>\n}","import React, { useState } from 'react';\nimport './App.scss';\nimport { Editor } from './Editor/Editor';\nimport { LandingPage } from './Landing/Landing';\n\nexport function App (){\n    const [template, setTemplate] = useState(null);\n\n    return <div className=\"app\">\n        <div className=\"app_header\">\n            <div className=\"app_logo\">\n                <span role=\"img\" aria-label=\"logo\">🎬</span> Framd\n            </div>\n\n            <div className=\"app_spring\"></div>\n\n            <div className=\"app_follow\">\n                <span role=\"img\" aria-label=\"owl\">🦉</span> -&gt; <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/kddsky\">follow me</a>\n            </div>\n        </div>\n\n        <div className=\"app_body\">{\n            template\n            ? <Editor defaultScenario={template} />\n            : <LandingPage onTemplateSelect={setTemplate} />\n        }</div>\n    </div>\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = /*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { Play: peg$parsePlay },\n        peg$startRuleFunction  = peg$parsePlay,\n\n        peg$c0 = function(entries) {\n            return entries;\n          },\n        peg$c1 = \"Scene\",\n        peg$c2 = peg$literalExpectation(\"Scene\", false),\n        peg$c3 = function(values) {\n          return {\n            type: 'scene',\n            values\n          }\n        },\n        peg$c4 = \"with\",\n        peg$c5 = peg$literalExpectation(\"with\", false),\n        peg$c6 = \"as\",\n        peg$c7 = peg$literalExpectation(\"as\", false),\n        peg$c8 = \"at\",\n        peg$c9 = peg$literalExpectation(\"at\", false),\n        peg$c10 = function(objectName, sprite, state) { return state; },\n        peg$c11 = function(objectName, sprite, state) {\n          return {\n            type: 'object',\n            objectName,\n            sprite,\n            state\n          }\n        },\n        peg$c12 = /^[^\\n\\t\\x08\\r ]/,\n        peg$c13 = peg$classExpectation([\"\\n\", \"\\t\", \"\\b\", \"\\r\", \" \"], true, false),\n        peg$c14 = function() {\n          return 'emoji:' +text();\n        },\n        peg$c15 = \"#\",\n        peg$c16 = peg$literalExpectation(\"#\", false),\n        peg$c17 = \"ms\",\n        peg$c18 = peg$literalExpectation(\"ms\", false),\n        peg$c19 = function(duration) { return duration; },\n        peg$c20 = function(duration, value) {\n          return {\n            type: 'frame',\n            duration,\n            value\n          }\n        },\n        peg$c21 = \"where\",\n        peg$c22 = peg$literalExpectation(\"where\", false),\n        peg$c23 = function(key, value) {\n          return { type: 'action', key, value }\n        },\n        peg$c24 = \"is at\",\n        peg$c25 = peg$literalExpectation(\"is at\", false),\n        peg$c26 = function(value) {\n          return { type: 'state-action'\n                 , value\n                 }\n        },\n        peg$c27 = function(sprite) {\n          return { type: 'sprite-action'\n                 , sprite\n                 }\n        },\n        peg$c28 = \"moves\",\n        peg$c29 = peg$literalExpectation(\"moves\", false),\n        peg$c30 = \"px\",\n        peg$c31 = peg$literalExpectation(\"px\", false),\n        peg$c32 = \"left\",\n        peg$c33 = peg$literalExpectation(\"left\", false),\n        peg$c34 = \"right\",\n        peg$c35 = peg$literalExpectation(\"right\", false),\n        peg$c36 = \"up\",\n        peg$c37 = peg$literalExpectation(\"up\", false),\n        peg$c38 = \"down\",\n        peg$c39 = peg$literalExpectation(\"down\", false),\n        peg$c40 = function(value, direction) {\n          return { type: 'move-action'\n                 , value\n                 , direction\n                 }\n        },\n        peg$c41 = \"turns\",\n        peg$c42 = peg$literalExpectation(\"turns\", false),\n        peg$c43 = function() {\n          return { type: 'turn-action' }\n        },\n        peg$c44 = \"flips\",\n        peg$c45 = peg$literalExpectation(\"flips\", false),\n        peg$c46 = function() {\n          return { type: 'flip-action' }\n        },\n        peg$c47 = \"scales\",\n        peg$c48 = peg$literalExpectation(\"scales\", false),\n        peg$c49 = \"x\",\n        peg$c50 = peg$literalExpectation(\"x\", false),\n        peg$c51 = \"times\",\n        peg$c52 = peg$literalExpectation(\"times\", false),\n        peg$c53 = function(times) {\n          return { type: 'scale-action', times }\n        },\n        peg$c54 = \"says\",\n        peg$c55 = peg$literalExpectation(\"says\", false),\n        peg$c56 = function(value) {\n          return { type: 'say-action'\n                 , value\n                 }\n        },\n        peg$c57 = /^[A-Z_]/,\n        peg$c58 = peg$classExpectation([[\"A\", \"Z\"], \"_\"], false, false),\n        peg$c59 = /^[A-Za-z0-9_]/,\n        peg$c60 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"], \"_\"], false, false),\n        peg$c61 = function() { return text() },\n        peg$c62 = /^[a-z_]/,\n        peg$c63 = peg$classExpectation([[\"a\", \"z\"], \"_\"], false, false),\n        peg$c64 = \"{\",\n        peg$c65 = peg$literalExpectation(\"{\", false),\n        peg$c66 = \"}\",\n        peg$c67 = peg$literalExpectation(\"}\", false),\n        peg$c68 = function(keyval) {\n          return keyval.reduce((acc, curr) => {\n            acc[curr[0]] = curr[1];\n            return acc;\n          }, Object.create(null));\n        },\n        peg$c69 = \":\",\n        peg$c70 = peg$literalExpectation(\":\", false),\n        peg$c71 = function(key, value) {\n          return [key, value];\n        },\n        peg$c72 = peg$otherExpectation(\"Number\"),\n        peg$c73 = /^[\\-+]/,\n        peg$c74 = peg$classExpectation([\"-\", \"+\"], false, false),\n        peg$c75 = /^[0-9]/,\n        peg$c76 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c77 = \".\",\n        peg$c78 = peg$literalExpectation(\".\", false),\n        peg$c79 = function() {\n          return Number.parseFloat(text());\n        },\n        peg$c80 = peg$otherExpectation(\"String\"),\n        peg$c81 = \"\\\"\",\n        peg$c82 = peg$literalExpectation(\"\\\"\", false),\n        peg$c83 = /^[^\\n\\r\"]/,\n        peg$c84 = peg$classExpectation([\"\\n\", \"\\r\", \"\\\"\"], true, false),\n        peg$c85 = function(content) {\n          return content;\n        },\n        peg$c86 = peg$otherExpectation(\"Boolean\"),\n        peg$c87 = \"true\",\n        peg$c88 = peg$literalExpectation(\"true\", false),\n        peg$c89 = \"false\",\n        peg$c90 = peg$literalExpectation(\"false\", false),\n        peg$c91 = function() {\n          return Boolean(text())\n        },\n        peg$c92 = peg$otherExpectation(\"newline\"),\n        peg$c93 = /^[\\n$]/,\n        peg$c94 = peg$classExpectation([\"\\n\", \"$\"], false, false),\n        peg$c95 = peg$otherExpectation(\"whitespace\"),\n        peg$c96 = /^[ \\t\\n\\r]/,\n        peg$c97 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$resultsCache = {},\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsePlay() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 23 + 0,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseScene();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseFrame();\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseScene();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseFrame();\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseScene() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 23 + 1,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c1) {\n        s1 = peg$c1;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c2); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_$();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsewith();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsewith();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c3(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsewith() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      var key    = peg$currPos * 23 + 2,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c4) {\n        s1 = peg$c4;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseVar();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c6) {\n                s5 = peg$c6;\n                peg$currPos += 2;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c7); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseSprite();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parse_();\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$currPos;\n                      if (input.substr(peg$currPos, 2) === peg$c8) {\n                        s10 = peg$c8;\n                        peg$currPos += 2;\n                      } else {\n                        s10 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c9); }\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parse_();\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parseObject();\n                          if (s12 !== peg$FAILED) {\n                            peg$savedPos = s9;\n                            s10 = peg$c10(s3, s7, s12);\n                            s9 = s10;\n                          } else {\n                            peg$currPos = s9;\n                            s9 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                      if (s9 === peg$FAILED) {\n                        s9 = null;\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parse_$();\n                        if (s10 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c11(s3, s7, s9);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseSprite() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 23 + 3,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c12.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseFrame() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 23 + 4,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c15;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c16); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseNumber();\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c17) {\n              s5 = peg$c17;\n              peg$currPos += 2;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c19(s4);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_$();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parsewhere();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsewhere();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c20(s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsewhere() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 23 + 5,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c21) {\n        s1 = peg$c21;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseVar();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseAction();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_$();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c23(s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseAction() {\n      var s0;\n\n      var key    = peg$currPos * 23 + 6,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$parseStateAction();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseChangeSpriteAction();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseTurnAction();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseFlipAction();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseMoveAction();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseScaleAction();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseSayAction();\n                }\n              }\n            }\n          }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseStateAction() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 23 + 7,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c24) {\n        s1 = peg$c24;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseObject();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c26(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseChangeSpriteAction() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 23 + 8,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c6) {\n        s1 = peg$c6;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c7); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseSprite();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c27(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseMoveAction() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 23 + 9,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c28) {\n        s1 = peg$c28;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseNumber();\n          if (s3 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c30) {\n              s4 = peg$c30;\n              peg$currPos += 2;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c31); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c32) {\n                  s6 = peg$c32;\n                  peg$currPos += 4;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c33); }\n                }\n                if (s6 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c34) {\n                    s6 = peg$c34;\n                    peg$currPos += 5;\n                  } else {\n                    s6 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                  }\n                  if (s6 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c36) {\n                      s6 = peg$c36;\n                      peg$currPos += 2;\n                    } else {\n                      s6 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                    }\n                    if (s6 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 4) === peg$c38) {\n                        s6 = peg$c38;\n                        peg$currPos += 4;\n                      } else {\n                        s6 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                      }\n                    }\n                  }\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c40(s3, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseTurnAction() {\n      var s0, s1;\n\n      var key    = peg$currPos * 23 + 10,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c41) {\n        s1 = peg$c41;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c43();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseFlipAction() {\n      var s0, s1;\n\n      var key    = peg$currPos * 23 + 11,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c44) {\n        s1 = peg$c44;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c46();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseScaleAction() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 23 + 12,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c47) {\n        s1 = peg$c47;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseNumber();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 120) {\n              s4 = peg$c49;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c50); }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c51) {\n                s4 = peg$c51;\n                peg$currPos += 5;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c53(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseSayAction() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 23 + 13,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c54) {\n        s1 = peg$c54;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c55); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseString();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c56(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseVar() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 23 + 14,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (peg$c57.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c58); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c59.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c60); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c59.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c61();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsevar() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 23 + 15,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (peg$c62.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c63); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c59.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c60); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c59.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c61();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseObject() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 23 + 16,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c64;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseKeyValue();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseKeyValue();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 125) {\n            s3 = peg$c66;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c68(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseKeyValue() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 23 + 17,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsevar();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseVar();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s4 = peg$c69;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c70); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseNumber();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$parseString();\n                  if (s6 === peg$FAILED) {\n                    s6 = peg$parseBoolean();\n                  }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c71(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseNumber() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 23 + 18,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (peg$c73.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c75.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c76); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c75.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c76); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c77;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c78); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c75.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c76); }\n            }\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                if (peg$c75.test(input.charAt(peg$currPos))) {\n                  s7 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                }\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s2 = [s2, s3, s4];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c79();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseString() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 23 + 19,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c81;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c83.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c84); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c83.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c84); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c61();\n        }\n        s2 = s3;\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c81;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c82); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c85(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseBoolean() {\n      var s0, s1;\n\n      var key    = peg$currPos * 23 + 20,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 4) === peg$c87) {\n        s0 = peg$c87;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c88); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5) === peg$c89) {\n          s1 = peg$c89;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c90); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c91();\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parse_$() {\n      var s0, s1;\n\n      var key    = peg$currPos * 23 + 21,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c93.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c94); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c93.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c94); }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c92); }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      var key    = peg$currPos * 23 + 22,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c96.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c97); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c96.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c97); }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n"],"sourceRoot":""}